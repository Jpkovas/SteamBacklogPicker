<Window x:Class="SteamBacklogPicker.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="Steam Backlog Picker"
        Width="1200"
        Height="720"
        MinWidth="960"
        MinHeight="600"
        FontFamily="Segoe UI"
        Background="#0B0E13"
        Foreground="White">
    <Window.Resources>
        <SolidColorBrush x:Key="SurfaceBrush" Color="#141921" />
        <SolidColorBrush x:Key="SurfaceAltBrush" Color="#1B232E" />
        <SolidColorBrush x:Key="SurfaceBorderBrush" Color="#262F3D" />
        <SolidColorBrush x:Key="AccentBrush" Color="#4CB0FF" />
        <SolidColorBrush x:Key="AccentBrushDeep" Color="#2C8AE8" />
        <SolidColorBrush x:Key="AccentForegroundBrush" Color="#0B0E13" />
        <SolidColorBrush x:Key="MutedForegroundBrush" Color="#9AA5B5" />
        <SolidColorBrush x:Key="TagBrush" Color="#223344" />
        <SolidColorBrush x:Key="TagBorderBrush" Color="#2E4258" />

        <Style x:Key="CardBorderStyle" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource SurfaceBrush}" />
            <Setter Property="Padding" Value="28" />
            <Setter Property="CornerRadius" Value="18" />
            <Setter Property="BorderBrush" Value="{StaticResource SurfaceBorderBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
        </Style>

        <Style x:Key="SectionTitleTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="24" />
            <Setter Property="FontWeight" Value="Bold" />
        </Style>

        <Style x:Key="SectionLabelTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="Foreground" Value="{StaticResource MutedForegroundBrush}" />
            <Setter Property="Margin" Value="0,20,0,6" />
            <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        </Style>

        <Style x:Key="SectionSupportingTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Foreground" Value="{StaticResource MutedForegroundBrush}" />
        </Style>

        <Style x:Key="BaseButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="{StaticResource SurfaceAltBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="14,10" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="ButtonRoot"
                                Background="{TemplateBinding Background}"
                                CornerRadius="10">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ButtonRoot"
                                        Property="Background"
                                        Value="{StaticResource AccentBrush}" />
                                <Setter Property="Foreground"
                                        Value="{StaticResource AccentForegroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ButtonRoot"
                                        Property="Background"
                                        Value="{StaticResource AccentBrushDeep}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="ButtonRoot" Property="Opacity" Value="0.35" />
                                <Setter Property="Foreground" Value="{StaticResource MutedForegroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PrimaryButtonStyle"
               TargetType="Button"
               BasedOn="{StaticResource BaseButtonStyle}">
            <Setter Property="Background" Value="{StaticResource AccentBrush}" />
            <Setter Property="Foreground" Value="{StaticResource AccentForegroundBrush}" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Padding" Value="18,12" />
        </Style>
        <Style x:Key="LanguageButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="52" />
            <Setter Property="Height" Value="52" />
            <Setter Property="Padding" Value="10" />
            <Setter Property="Background" Value="{StaticResource SurfaceAltBrush}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderBrush" Value="{StaticResource SurfaceBorderBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="ButtonRoot"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="12">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ButtonRoot"
                                        Property="BorderBrush"
                                        Value="{StaticResource AccentBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ButtonRoot"
                                        Property="Background"
                                        Value="{StaticResource SurfaceBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="ButtonRoot" Property="Opacity" Value="0.5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="10" />
                            <Path x:Name="Arrow"
                                  Data="M 0 0 L 6 6 L 12 0"
                                  Stroke="{StaticResource MutedForegroundBrush}"
                                  StrokeThickness="2"
                                  StrokeLineJoin="Round"
                                  StrokeEndLineCap="Round"
                                  StrokeStartLineCap="Round"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Right"
                                  Margin="0,0,18,0" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Arrow"
                                        Property="Stroke"
                                        Value="{StaticResource AccentBrush}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Arrow"
                                        Property="Stroke"
                                        Value="{StaticResource AccentBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Arrow" Property="Opacity" Value="0.4" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SurfaceComboBoxItemStyle" TargetType="ComboBoxItem">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Padding" Value="12,6" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border x:Name="BackgroundBorder"
                                Background="Transparent"
                                CornerRadius="8"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              TextElement.Foreground="{TemplateBinding Foreground}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="BackgroundBorder"
                                        Property="Background"
                                        Value="{StaticResource AccentBrush}" />
                                <Setter Property="Foreground"
                                        Value="{StaticResource AccentForegroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="BackgroundBorder"
                                        Property="Background"
                                        Value="{StaticResource AccentBrushDeep}" />
                                <Setter Property="Foreground"
                                        Value="{StaticResource AccentForegroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="BackgroundBorder" Property="Opacity" Value="0.35" />
                                <Setter Property="Foreground" Value="{StaticResource MutedForegroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SurfaceComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="{StaticResource SurfaceAltBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource SurfaceBorderBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="12,8" />
            <Setter Property="MinHeight" Value="40" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource SurfaceComboBoxItemStyle}" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Border x:Name="BackgroundBorder"
                                    Grid.ColumnSpan="2"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="10" />

                            <ContentPresenter x:Name="ContentPresenter"
                                              Grid.Column="0"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              TextElement.Foreground="{TemplateBinding Foreground}"
                                              RecognizesAccessKey="True" />

                            <ToggleButton x:Name="ToggleButton"
                                          Grid.ColumnSpan="2"
                                          Style="{StaticResource ComboBoxToggleButtonStyle}"
                                          Background="Transparent"
                                          BorderThickness="0"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />

                            <Popup x:Name="PART_Popup"
                                   Placement="Bottom"
                                   PlacementTarget="{Binding ElementName=ToggleButton}"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Border Background="{StaticResource SurfaceAltBrush}"
                                        BorderBrush="{StaticResource SurfaceBorderBrush}"
                                        BorderThickness="1"
                                        CornerRadius="12"
                                        Margin="0,8,0,0"
                                        SnapsToDevicePixels="True"
                                        MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ScrollViewer Margin="4"
                                                  CanContentScroll="True"
                                                  VerticalScrollBarVisibility="Auto"
                                                  HorizontalScrollBarVisibility="Disabled">
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="PART_Popup"
                                     Property="HasDropShadow"
                                     Value="True">
                                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="Fade" />
                            </Trigger>
                            <Trigger Property="IsDropDownOpen" Value="True">
                                <Setter TargetName="BackgroundBorder"
                                        Property="BorderBrush"
                                        Value="{StaticResource AccentBrush}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="BackgroundBorder"
                                        Property="BorderBrush"
                                        Value="{StaticResource AccentBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource MutedForegroundBrush}" />
                                <Setter TargetName="BackgroundBorder" Property="Opacity" Value="0.4" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="MinimalCheckBoxTemplate" TargetType="CheckBox">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border x:Name="Box"
                        Width="18"
                        Height="18"
                        Background="Transparent"
                        BorderBrush="{StaticResource SurfaceBorderBrush}"
                        BorderThickness="1.5"
                        CornerRadius="5" />
                <Path x:Name="CheckMark"
                      Grid.Column="0"
                      Margin="3"
                      Stroke="{StaticResource AccentForegroundBrush}"
                      StrokeThickness="2.2"
                      StrokeEndLineCap="Round"
                      StrokeStartLineCap="Round"
                      StrokeLineJoin="Round"
                      Data="M 2 9 L 7 14 L 15 4"
                      Visibility="Collapsed" />
                <ContentPresenter Grid.Column="1"
                                  Margin="12,0,0,0"
                                  VerticalAlignment="Center"
                                  RecognizesAccessKey="True" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="Box" Property="BorderBrush" Value="{StaticResource AccentBrush}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="Box" Property="Background" Value="{StaticResource SurfaceAltBrush}" />
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter TargetName="Box" Property="Background" Value="{StaticResource AccentBrush}" />
                    <Setter TargetName="Box" Property="BorderBrush" Value="{StaticResource AccentBrush}" />
                    <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Box" Property="Opacity" Value="0.35" />
                    <Setter Property="Foreground" Value="{StaticResource MutedForegroundBrush}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="FilterCheckBoxStyle" TargetType="CheckBox">
            <Setter Property="Template" Value="{StaticResource MinimalCheckBoxTemplate}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Margin" Value="0,0,0,8" />
            <Setter Property="Cursor" Value="Hand" />
        </Style>
        <Style x:Key="CoverPlaceholderStyle" TargetType="StackPanel">
            <Setter Property="Visibility" Value="Collapsed" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="IsHitTestVisible" Value="False" />
            <Setter Property="Margin" Value="24" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding HasSelection}" Value="False">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=CoverImage, Path=Source}" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Window.Resources>
    <Grid Margin="32">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="360" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Border Grid.Row="0"
                Style="{StaticResource CardBorderStyle}"
                AutomationProperties.Name="{DynamicResource Filters_PanelAutomationName}">
            <StackPanel>
                <TextBlock Text="{DynamicResource Filters_Title}"
                           Style="{StaticResource SectionTitleTextStyle}" />

                <CheckBox Content="{DynamicResource Filters_RequireInstalled}"
                          Style="{StaticResource FilterCheckBoxStyle}"
                          IsChecked="{Binding Preferences.RequireInstalled, Mode=TwoWay}"
                          AutomationProperties.Name="{DynamicResource Filters_RequireInstalled}" />

                <TextBlock Text="{DynamicResource Filters_DeckCompatibilityLabel}"
                           Style="{StaticResource SectionLabelTextStyle}" />

                <StackPanel>
                    <CheckBox Content="{DynamicResource Filters_DeckCompatibility_Unknown}"
                              Style="{StaticResource FilterCheckBoxStyle}"
                              IsChecked="{Binding Preferences.IncludeDeckUnknown, Mode=TwoWay}"
                              AutomationProperties.Name="{DynamicResource Filters_DeckCompatibility_Unknown}" />
                    <CheckBox Content="{DynamicResource Filters_DeckCompatibility_Verified}"
                              Style="{StaticResource FilterCheckBoxStyle}"
                              IsChecked="{Binding Preferences.IncludeDeckVerified, Mode=TwoWay}"
                              AutomationProperties.Name="{DynamicResource Filters_DeckCompatibility_Verified}" />
                    <CheckBox Content="{DynamicResource Filters_DeckCompatibility_Playable}"
                              Style="{StaticResource FilterCheckBoxStyle}"
                              IsChecked="{Binding Preferences.IncludeDeckPlayable, Mode=TwoWay}"
                              AutomationProperties.Name="{DynamicResource Filters_DeckCompatibility_Playable}" />
                    <CheckBox Content="{DynamicResource Filters_DeckCompatibility_Unsupported}"
                              Style="{StaticResource FilterCheckBoxStyle}"
                              IsChecked="{Binding Preferences.IncludeDeckUnsupported, Mode=TwoWay}"
                              AutomationProperties.Name="{DynamicResource Filters_DeckCompatibility_Unsupported}" />
                </StackPanel>

                <TextBlock Text="{DynamicResource Filters_RecentExclusionLabel}"
                           Style="{StaticResource SectionLabelTextStyle}" />

                <Slider Minimum="0"
                        Maximum="10"
                        Value="{Binding Preferences.RecentGameExclusionCount, Mode=TwoWay}"
                        TickFrequency="1"
                        IsSnapToTickEnabled="True"
                        SmallChange="1"
                        LargeChange="1"
                        Margin="0,0,0,4"
                        AutomationProperties.Name="{DynamicResource Filters_RecentExclusionLabel}"
                        AutomationProperties.HelpText="{DynamicResource Filters_RecentExclusion_HelpText}" />

                <StackPanel Orientation="Horizontal"
                            Margin="0,0,0,12">
                    <TextBlock Text="{DynamicResource Filters_RecentExclusion_ValuePrefix}"
                               Style="{StaticResource SectionSupportingTextStyle}"
                               Margin="0,0,4,0" />
                    <TextBlock Text="{Binding Preferences.RecentGameExclusionCount}"
                               Style="{StaticResource SectionSupportingTextStyle}" />
                </StackPanel>

                <TextBlock Text="{DynamicResource Filters_ContentTypesLabel}"
                           Style="{StaticResource SectionLabelTextStyle}" />

                <StackPanel>
                    <CheckBox Content="{DynamicResource Filters_IncludeGames}"
                              Style="{StaticResource FilterCheckBoxStyle}"
                              IsChecked="{Binding Preferences.IncludeGames, Mode=TwoWay}"
                              AutomationProperties.Name="{DynamicResource Filters_IncludeGames}" />
                    <CheckBox Content="{DynamicResource Filters_IncludeSoundtracks}"
                              Style="{StaticResource FilterCheckBoxStyle}"
                              IsChecked="{Binding Preferences.IncludeSoundtracks, Mode=TwoWay}"
                              AutomationProperties.Name="{DynamicResource Filters_IncludeSoundtracks}" />
                    <CheckBox Content="{DynamicResource Filters_IncludeSoftware}"
                              Style="{StaticResource FilterCheckBoxStyle}"
                              IsChecked="{Binding Preferences.IncludeSoftware, Mode=TwoWay}"
                              AutomationProperties.Name="{DynamicResource Filters_IncludeSoftware}" />
                    <CheckBox Content="{DynamicResource Filters_IncludeTools}"
                              Style="{StaticResource FilterCheckBoxStyle}"
                              IsChecked="{Binding Preferences.IncludeTools, Mode=TwoWay}"
                              AutomationProperties.Name="{DynamicResource Filters_IncludeTools}" />
                    <CheckBox Content="{DynamicResource Filters_IncludeVideos}"
                              Style="{StaticResource FilterCheckBoxStyle}"
                              IsChecked="{Binding Preferences.IncludeVideos, Mode=TwoWay}"
                              AutomationProperties.Name="{DynamicResource Filters_IncludeVideos}" />
                    <CheckBox Content="{DynamicResource Filters_IncludeOther}"
                              Style="{StaticResource FilterCheckBoxStyle}"
                              IsChecked="{Binding Preferences.IncludeOther, Mode=TwoWay}"
                              AutomationProperties.Name="{DynamicResource Filters_IncludeOther}" />
                </StackPanel>

                <TextBlock Text="{DynamicResource Filters_CollectionLabel}"
                           Style="{StaticResource SectionLabelTextStyle}" />

                <ComboBox ItemsSource="{Binding Preferences.CollectionOptions}"
                          SelectedItem="{Binding Preferences.SelectedCollection, Mode=TwoWay}"
                          Style="{StaticResource SurfaceComboBoxStyle}"
                          AutomationProperties.Name="{DynamicResource Filters_SelectCollection}"
                          AutomationProperties.HelpText="{DynamicResource Filters_SelectCollection_HelpText}" />

                <Button Content="{DynamicResource Filters_RefreshButton}"
                        Style="{StaticResource BaseButtonStyle}"
                        Command="{Binding RefreshCommand}"
                        Margin="0,12,0,0"
                        Height="44"
                        AutomationProperties.Name="{DynamicResource Filters_RefreshButton_Automation}" />

                <Button x:Name="DrawButton"
                        Content="{DynamicResource Filters_DrawButton}"
                        Style="{StaticResource PrimaryButtonStyle}"
                        Command="{Binding DrawCommand}"
                        Margin="0,20,0,0"
                        Height="52"
                        AutomationProperties.Name="{DynamicResource Filters_DrawButton_Automation}"
                        AutomationProperties.HelpText="{DynamicResource Filters_DrawButton_HelpText}" />

                <TextBlock Text="{Binding StatusMessage}"
                           Margin="0,16,0,0"
                           Foreground="{StaticResource MutedForegroundBrush}"
                           TextWrapping="Wrap"
                           AutomationProperties.LiveSetting="Assertive" />
            </StackPanel>
        </Border>
        <Border Grid.Row="0"
                Grid.Column="1"
                Margin="28,0,0,0"
                Style="{StaticResource CardBorderStyle}"
                Background="{StaticResource SurfaceAltBrush}"
                AutomationProperties.Name="{DynamicResource GameDetails_PanelAutomationName}">
            <Border.Resources>
                <Storyboard x:Key="CoverRevealStoryboard">
                    <DoubleAnimation Storyboard.TargetName="CoverVisualRoot"
                                     Storyboard.TargetProperty="Opacity"
                                     From="0"
                                     To="1"
                                     Duration="0:0:0.35" />
                    <DoubleAnimation Storyboard.TargetName="CoverRevealScale"
                                     Storyboard.TargetProperty="ScaleX"
                                     From="0.94"
                                     To="1"
                                     Duration="0:0:0.35" />
                    <DoubleAnimation Storyboard.TargetName="CoverRevealScale"
                                     Storyboard.TargetProperty="ScaleY"
                                     From="0.94"
                                     To="1"
                                     Duration="0:0:0.35" />
                </Storyboard>
            </Border.Resources>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <StackPanel>
                    <TextBlock Text="{DynamicResource GameDetails_NextGameTitle}"
                               Style="{StaticResource SectionTitleTextStyle}" />
                    <TextBlock Text="{Binding SelectedGame.Title}"
                               FontSize="20"
                               FontWeight="SemiBold"
                               Margin="0,6,0,0"
                               TextWrapping="Wrap"
                               AutomationProperties.Name="{DynamicResource GameDetails_SelectedTitleAutomation}" />
                </StackPanel>
                <Border Grid.Row="1"
                        Height="360"
                        Margin="0,24,0,24"
                        CornerRadius="18"
                        Background="{StaticResource SurfaceAltBrush}"
                        BorderBrush="{StaticResource SurfaceBorderBrush}"
                        BorderThickness="1"
                        SnapsToDevicePixels="True"
                        ClipToBounds="True">
                    <Grid x:Name="CoverVisualRoot"
                          Opacity="0"
                          Tag="{Binding SelectedGame.AppId, NotifyOnTargetUpdated=True}">
                        <Grid.RenderTransform>
                            <ScaleTransform x:Name="CoverRevealScale" ScaleX="1" ScaleY="1" />
                        </Grid.RenderTransform>
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Opacity" Value="0" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding HasSelection}" Value="False">
                                        <Setter Property="Opacity" Value="0" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Grid.Triggers>
                            <EventTrigger RoutedEvent="Binding.TargetUpdated">
                                <BeginStoryboard Storyboard="{StaticResource CoverRevealStoryboard}" />
                            </EventTrigger>
                        </Grid.Triggers>
                        <Border x:Name="CoverImageContainer"
                                Margin="2"
                                CornerRadius="16"
                                Background="Black"
                                SnapsToDevicePixels="True"
                                SizeChanged="OnCoverContainerSizeChanged">
                            <Image x:Name="CoverImage"
                                   Source="{Binding SelectedGame.CoverImagePath, NotifyOnTargetUpdated=True}"
                                   Stretch="UniformToFill"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   SnapsToDevicePixels="True"
                                   RenderOptions.BitmapScalingMode="HighQuality"
                                   TargetUpdated="OnCoverImageTargetUpdated"
                                   ImageFailed="OnCoverImageFailed" />
                        </Border>

                        <Rectangle Margin="2"
                                   RadiusX="16"
                                   RadiusY="16"
                                   IsHitTestVisible="False">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="#00000000" Offset="0" />
                                    <GradientStop Color="#D00B0E13" Offset="1" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>

                        <Border Margin="2"
                                Background="#660B0E13"
                                Padding="20,18"
                                Visibility="Collapsed"
                                VerticalAlignment="Bottom"
                                CornerRadius="0">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding HasSelection}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <StackPanel>
                                <TextBlock Text="{Binding SelectedGame.Title}"
                                           FontSize="18"
                                           FontWeight="SemiBold"
                                           TextWrapping="WrapWithOverflow" />
                                <TextBlock Text="{Binding SelectedGame.InstallationStatus}"
                                           FontSize="12"
                                           Foreground="{StaticResource MutedForegroundBrush}"
                                           Margin="0,6,0,0" />
                            </StackPanel>
                        </Border>
                        <StackPanel x:Name="CoverPlaceholder"
                                    Style="{StaticResource CoverPlaceholderStyle}">
                            <TextBlock x:Name="PlaceholderPrimaryText"
                                       Text="{DynamicResource GameDetails_NoSelectionTitle}"
                                       FontSize="18"
                                       FontWeight="SemiBold"
                                       TextAlignment="Center">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding HasSelection}" Value="False">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <TextBlock x:Name="PlaceholderSecondaryText"
                                       Text="{DynamicResource GameDetails_NoCoverSubtitle}"
                                       FontSize="18"
                                       FontWeight="SemiBold"
                                       TextAlignment="Center">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding HasSelection}" Value="True" />
                                                    <Condition Binding="{Binding ElementName=CoverImage, Path=Source}" Value="{x:Null}" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <TextBlock Text="{DynamicResource GameDetails_DrawPrompt}"
                                       FontSize="14"
                                       Foreground="{StaticResource MutedForegroundBrush}"
                                       TextAlignment="Center"
                                       Margin="0,8,0,0"
                                       TextWrapping="Wrap"
                                       MaxWidth="280" />
                        </StackPanel>

                        <Grid x:Name="DrawOverlay"
                              Background="#CC121A29"
                              IsHitTestVisible="False"
                              Visibility="{Binding IsDrawing, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Grid.Triggers>
                                <EventTrigger RoutedEvent="Grid.Loaded">
                                    <BeginStoryboard>
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimation Storyboard.TargetName="SpinnerArc"
                                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                             Duration="0:0:1.1"
                                                             To="360" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Grid.Triggers>
                            <StackPanel HorizontalAlignment="Center"
                                        VerticalAlignment="Center">
                                <Grid Width="72" Height="72">
                                    <Ellipse Width="72"
                                             Height="72"
                                             StrokeThickness="4"
                                             Stroke="#1FFFFFFF" />
                                    <Path x:Name="SpinnerArc"
                                          Stroke="{StaticResource AccentBrush}"
                                          StrokeThickness="4"
                                          StrokeStartLineCap="Round"
                                          StrokeEndLineCap="Round"
                                          Data="M 36 6 A 30 30 0 1 1 35.99 6"
                                          RenderTransformOrigin="0.5,0.5">
                                        <Path.RenderTransform>
                                            <RotateTransform />
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                                <TextBlock Text="{DynamicResource Status_Drawing}"
                                           FontSize="16"
                                           FontWeight="SemiBold"
                                           Margin="0,18,0,0"
                                           HorizontalAlignment="Center" />
                            </StackPanel>
                        </Grid>
                    </Grid>
                </Border>
                <StackPanel Grid.Row="2">
                    <TextBlock Text="{Binding SelectedGame.InstallationStatus}"
                               FontSize="16"
                               FontWeight="SemiBold"
                               AutomationProperties.Name="{DynamicResource GameDetails_InstallationAutomation}" />

                    <Grid Margin="0,12,0,24">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Button Grid.Column="0"
                                Content="{DynamicResource GameDetails_PlayButton}"
                                MinHeight="48"
                                Margin="0,0,8,0"
                                HorizontalAlignment="Stretch"
                                Style="{StaticResource BaseButtonStyle}"
                                Command="{Binding LaunchCommand}"
                                IsEnabled="{Binding SelectedGame.CanLaunch}"
                                AutomationProperties.Name="{DynamicResource GameDetails_PlayButton_Automation}" />

                        <Button Grid.Column="1"
                                Content="{DynamicResource GameDetails_InstallButton}"
                                MinHeight="48"
                                Margin="8,0,0,0"
                                HorizontalAlignment="Stretch"
                                Style="{StaticResource BaseButtonStyle}"
                                Command="{Binding InstallCommand}"
                                IsEnabled="{Binding SelectedGame.CanInstall}"
                                AutomationProperties.Name="{DynamicResource GameDetails_InstallButton_Automation}" />
                    </Grid>
                </StackPanel>

                <ItemsControl Grid.Row="3"
                              ItemsSource="{Binding SelectedGame.Tags}"
                              Margin="0,0,0,4">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Margin="0,-6,0,0" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border Background="{StaticResource TagBrush}"
                                    BorderBrush="{StaticResource TagBorderBrush}"
                                    BorderThickness="1"
                                    Padding="10,4"
                                    CornerRadius="10"
                                    Margin="0,6,6,0">
                                <TextBlock Text="{Binding}"
                                           FontSize="12"
                                           Foreground="{StaticResource MutedForegroundBrush}" />
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>
        </Border>
        <StackPanel Grid.Row="1"
                    Grid.ColumnSpan="2"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    Margin="0,24,0,0">
            <Button Command="{Binding ChangeLanguageCommand}"
                    CommandParameter="pt-BR"
                    ToolTip="{DynamicResource Language_Portuguese}"
                    AutomationProperties.Name="{DynamicResource Language_Portuguese}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource LanguageButtonStyle}">
                        <Setter Property="Margin" Value="0" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentLanguage}" Value="pt-BR">
                                <Setter Property="Background" Value="{StaticResource AccentBrush}" />
                                <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Viewbox Width="28"
                         Height="20"
                         Stretch="Uniform">
                    <Grid Width="28"
                          Height="20"
                          ClipToBounds="True">
                        <Rectangle Fill="#009B3A"
                                   RadiusX="2"
                                   RadiusY="2" />
                        <Polygon Points="14,2 24,10 14,18 4,10"
                                 Fill="#FFDF00" />
                        <Ellipse Width="10"
                                 Height="10"
                                 Fill="#002776"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center" />
                        <Path Data="M 8 11 A 5 5 0 0 1 20 9"
                              Stroke="White"
                              StrokeThickness="0.8"
                              StrokeStartLineCap="Round"
                              StrokeEndLineCap="Round"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Stretch="None" />
                    </Grid>
                </Viewbox>
            </Button>
            <Button Command="{Binding ChangeLanguageCommand}"
                    CommandParameter="en-US"
                    ToolTip="{DynamicResource Language_English}"
                    AutomationProperties.Name="{DynamicResource Language_English}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource LanguageButtonStyle}">
                        <Setter Property="Margin" Value="12,0,0,0" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentLanguage}" Value="en-US">
                                <Setter Property="Background" Value="{StaticResource AccentBrush}" />
                                <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Viewbox Width="28"
                         Height="20"
                         Stretch="Uniform">
                    <Grid Width="28"
                          Height="20"
                          ClipToBounds="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Rectangle Grid.Row="0" Fill="#B22234" />
                        <Rectangle Grid.Row="1" Fill="White" />
                        <Rectangle Grid.Row="2" Fill="#B22234" />
                        <Rectangle Grid.Row="3" Fill="White" />
                        <Rectangle Grid.Row="4" Fill="#B22234" />
                        <Rectangle Grid.Row="5" Fill="White" />
                        <Rectangle Grid.Row="6" Fill="#B22234" />
                        <Rectangle Grid.Row="7" Fill="White" />
                        <Rectangle Grid.Row="8" Fill="#B22234" />
                        <Rectangle Grid.Row="9" Fill="White" />
                        <Rectangle Grid.Row="10" Fill="#B22234" />
                        <Rectangle Grid.Row="11" Fill="White" />
                        <Rectangle Grid.Row="12" Fill="#B22234" />
                        <Rectangle Grid.Row="0"
                                   Grid.RowSpan="7"
                                   Fill="#3C3B6E"
                                   HorizontalAlignment="Left"
                                   Width="12" />
                        <UniformGrid Grid.Row="0"
                                     Grid.RowSpan="7"
                                     Columns="6"
                                     Rows="5"
                                     Width="10"
                                     Height="8"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Top"
                                     Margin="1.2,1.2,0,0">
                            <Ellipse Fill="White" Margin="0.2" />
                            <Ellipse Fill="White" Margin="0.2" />
                            <Ellipse Fill="White" Margin="0.2" />
                            <Ellipse Fill="White" Margin="0.2" />
                            <Ellipse Fill="White" Margin="0.2" />
                            <Ellipse Fill="White" Margin="0.2" />
                            <Ellipse Fill="White" Margin="0.2" />
                            <Ellipse Fill="White" Margin="0.2" />
                            <Ellipse Fill="White" Margin="0.2" />
                            <Ellipse Fill="White" Margin="0.2" />
                            <Ellipse Fill="White" Margin="0.2" />
                            <Ellipse Fill="White" Margin="0.2" />
                            <Ellipse Fill="White" Margin="0.2" />
                            <Ellipse Fill="White" Margin="0.2" />
                            <Ellipse Fill="White" Margin="0.2" />
                            <Ellipse Fill="White" Margin="0.2" />
                            <Ellipse Fill="White" Margin="0.2" />
                            <Ellipse Fill="White" Margin="0.2" />
                            <Ellipse Fill="White" Margin="0.2" />
                            <Ellipse Fill="White" Margin="0.2" />
                            <Ellipse Fill="White" Margin="0.2" />
                            <Ellipse Fill="White" Margin="0.2" />
                            <Ellipse Fill="White" Margin="0.2" />
                            <Ellipse Fill="White" Margin="0.2" />
                            <Ellipse Fill="White" Margin="0.2" />
                            <Ellipse Fill="White" Margin="0.2" />
                            <Ellipse Fill="White" Margin="0.2" />
                            <Ellipse Fill="White" Margin="0.2" />
                            <Ellipse Fill="White" Margin="0.2" />
                            <Ellipse Fill="White" Margin="0.2" />
                        </UniformGrid>
                    </Grid>
                </Viewbox>
            </Button>
        </StackPanel>
    </Grid>
</Window>
